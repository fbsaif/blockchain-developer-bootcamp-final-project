{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; if (typeof Symbol !== \"undefined\") { async = Symbol.asyncIterator; sync = Symbol.iterator; } while (retry--) { if (async && (method = iterable[async]) != null) { return method.call(iterable); } if (sync && (method = iterable[sync]) != null) { return new AsyncFromSyncIterator(method.call(iterable)); } async = \"@@asyncIterator\"; sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s; this.n = s.next; }; AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; if (ret === undefined) { return Promise.resolve({ value: value, done: true }); } return AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; if (thr === undefined) return Promise.reject(value); return AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }; function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) { return Promise.reject(new TypeError(r + \" is not an object.\")); } var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return new AsyncFromSyncIterator(s); }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar responseTypes = require('./response-types.js');\n\nvar fromString = require('uint8arrays/from-string');\n\nvar toString = require('uint8arrays/to-string');\n\nvar createGet = configure.configure(function (api) {\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n\n  function _get() {\n    _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n      var options,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          message,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('dht/get', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: key instanceof Uint8Array ? toString.toString(key) : key\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 8:\n              _context.next = 10;\n              return _iterator.next();\n\n            case 10:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 17;\n                break;\n              }\n\n              message = _step.value;\n\n              if (!(message.Type === responseTypes.Value)) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", fromString.fromString(message.Extra, 'base64pad'));\n\n            case 14:\n              _iteratorAbruptCompletion = false;\n              _context.next = 8;\n              break;\n\n            case 17:\n              _context.next = 23;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 23:\n              _context.prev = 23;\n              _context.prev = 24;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 28;\n                break;\n              }\n\n              _context.next = 28;\n              return _iterator.return();\n\n            case 28:\n              _context.prev = 28;\n\n              if (!_didIteratorError) {\n                _context.next = 31;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 31:\n              return _context.finish(28);\n\n            case 32:\n              return _context.finish(23);\n\n            case 33:\n              throw new Error('not found');\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 19, 23, 33], [24,, 28, 32]]);\n    }));\n    return _get.apply(this, arguments);\n  }\n\n  return get;\n});\nexports.createGet = createGet;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/dht/get.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","responseTypes","fromString","toString","createGet","api","get","key","options","post","signal","searchParams","arg","Uint8Array","headers","res","ndjson","message","Type","Value","Extra","Error"],"mappings":"AAAA;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAIE,aAAa,GAAGF,OAAO,CAAC,qBAAD,CAA3B;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,yBAAD,CAAxB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMK,SAAS,GAAGN,SAAS,CAACA,SAAV,CAAoB,UAAAO,GAAG,EAAI;AAAA,WAC5BC,GAD4B;AAAA;AAAA;;AAAA;AAAA,oEAC3C,iBAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAwBC,cAAAA,OAAxB,2DAAkC,EAAlC;AAAA;AAAA,qBACoBH,GAAG,CAACI,IAAJ,CAAS,SAAT,EAAoB;AACpCC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MADoB;AAEpCC,gBAAAA,YAAY,EAAEX,iBAAiB,CAACA,iBAAlB;AACZY,kBAAAA,GAAG,EAAEL,GAAG,YAAYM,UAAf,GAA4BV,QAAQ,CAACA,QAAT,CAAkBI,GAAlB,CAA5B,GAAqDA;AAD9C,mBAETC,OAFS,EAFsB;AAMpCM,gBAAAA,OAAO,EAAEN,OAAO,CAACM;AANmB,eAApB,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA;AAAA;AAAA;AAAA,yCAS8BA,GAAG,CAACC,MAAJ,EAT9B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AASmBC,cAAAA,OATnB;;AAAA,oBAUQA,OAAO,CAACC,IAAR,KAAiBjB,aAAa,CAACkB,KAVvC;AAAA;AAAA;AAAA;;AAAA,+CAWajB,UAAU,CAACA,UAAX,CAAsBe,OAAO,CAACG,KAA9B,EAAqC,WAArC,CAXb;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,oBAcQ,IAAIC,KAAJ,CAAU,WAAV,CAdR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD2C;AAAA;AAAA;;AAiB3C,SAAOf,GAAP;AACD,CAlBiB,CAAlB;AAoBAV,OAAO,CAACQ,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar responseTypes = require('./response-types.js');\nvar fromString = require('uint8arrays/from-string');\nvar toString = require('uint8arrays/to-string');\n\nconst createGet = configure.configure(api => {\n  async function get(key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: key instanceof Uint8Array ? toString.toString(key) : key,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const message of res.ndjson()) {\n      if (message.Type === responseTypes.Value) {\n        return fromString.fromString(message.Extra, 'base64pad');\n      }\n    }\n    throw new Error('not found');\n  }\n  return get;\n});\n\nexports.createGet = createGet;\n"]},"metadata":{},"sourceType":"script"}