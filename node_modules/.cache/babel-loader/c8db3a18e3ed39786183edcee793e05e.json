{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _objectSpread = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; if (typeof Symbol !== \"undefined\") { async = Symbol.asyncIterator; sync = Symbol.iterator; } while (retry--) { if (async && (method = iterable[async]) != null) { return method.call(iterable); } if (sync && (method = iterable[sync]) != null) { return new AsyncFromSyncIterator(method.call(iterable)); } async = \"@@asyncIterator\"; sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s; this.n = s.next; }; AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; if (ret === undefined) { return Promise.resolve({ value: value, done: true }); } return AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; if (thr === undefined) return Promise.reject(value); return AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }; function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) { return Promise.reject(new TypeError(r + \" is not an object.\")); } var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return new AsyncFromSyncIterator(s); }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar multiaddr = require('multiaddr');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar responseTypes = require('./response-types.js');\n\nvar createFindProvs = configure.configure(function (api) {\n  function findProvs(_x) {\n    return _findProvs.apply(this, arguments);\n  }\n\n  function _findProvs() {\n    _findProvs = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n      var options,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          message,\n          _iterator2,\n          _step2,\n          _step2$value,\n          ID,\n          Addrs,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('dht/findprovs', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: cid.toString()\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 3:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 8:\n              _context.next = 10;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 10:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 33;\n                break;\n              }\n\n              message = _step.value;\n\n              if (!(message.Type === responseTypes.Provider && message.Responses)) {\n                _context.next = 30;\n                break;\n              }\n\n              _iterator2 = _createForOfIteratorHelper(message.Responses);\n              _context.prev = 14;\n\n              _iterator2.s();\n\n            case 16:\n              if ((_step2 = _iterator2.n()).done) {\n                _context.next = 22;\n                break;\n              }\n\n              _step2$value = _step2.value, ID = _step2$value.ID, Addrs = _step2$value.Addrs;\n              _context.next = 20;\n              return {\n                id: ID,\n                addrs: (Addrs || []).map(function (a) {\n                  return new multiaddr.Multiaddr(a);\n                })\n              };\n\n            case 20:\n              _context.next = 16;\n              break;\n\n            case 22:\n              _context.next = 27;\n              break;\n\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](14);\n\n              _iterator2.e(_context.t0);\n\n            case 27:\n              _context.prev = 27;\n\n              _iterator2.f();\n\n              return _context.finish(27);\n\n            case 30:\n              _iteratorAbruptCompletion = false;\n              _context.next = 8;\n              break;\n\n            case 33:\n              _context.next = 39;\n              break;\n\n            case 35:\n              _context.prev = 35;\n              _context.t1 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n\n            case 39:\n              _context.prev = 39;\n              _context.prev = 40;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 44;\n                break;\n              }\n\n              _context.next = 44;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 44:\n              _context.prev = 44;\n\n              if (!_didIteratorError) {\n                _context.next = 47;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 47:\n              return _context.finish(44);\n\n            case 48:\n              return _context.finish(39);\n\n            case 49:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 35, 39, 49], [14, 24, 27, 30], [40,, 44, 48]]);\n    }));\n    return _findProvs.apply(this, arguments);\n  }\n\n  return findProvs;\n});\nexports.createFindProvs = createFindProvs;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/dht/find-provs.js"],"names":["Object","defineProperty","exports","value","multiaddr","require","configure","toUrlSearchParams","responseTypes","createFindProvs","api","findProvs","cid","options","post","signal","searchParams","arg","toString","headers","res","ndjson","message","Type","Provider","Responses","ID","Addrs","id","addrs","map","a","Multiaddr"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAIG,aAAa,GAAGH,OAAO,CAAC,qBAAD,CAA3B;;AAEA,IAAMI,eAAe,GAAGH,SAAS,CAACA,SAAV,CAAoB,UAAAI,GAAG,EAAI;AAAA,WACjCC,SADiC;AAAA;AAAA;;AAAA;AAAA,4EACjD,iBAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA+BC,cAAAA,OAA/B,2DAAyC,EAAzC;AAAA;AAAA,0CACoBH,GAAG,CAACI,IAAJ,CAAS,eAAT,EAA0B;AAC1CC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MAD0B;AAE1CC,gBAAAA,YAAY,EAAET,iBAAiB,CAACA,iBAAlB;AACZU,kBAAAA,GAAG,EAAEL,GAAG,CAACM,QAAJ;AADO,mBAETL,OAFS,EAF4B;AAM1CM,gBAAAA,OAAO,EAAEN,OAAO,CAACM;AANyB,eAA1B,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA;AAAA;AAAA;AAAA,yCAS8BA,GAAG,CAACC,MAAJ,EAT9B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AASmBC,cAAAA,OATnB;;AAAA,oBAUQA,OAAO,CAACC,IAAR,KAAiBf,aAAa,CAACgB,QAA/B,IAA2CF,OAAO,CAACG,SAV3D;AAAA;AAAA;AAAA;;AAAA,sDAWgCH,OAAO,CAACG,SAXxC;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,2CAWkBC,EAXlB,gBAWkBA,EAXlB,EAWsBC,KAXtB,gBAWsBA,KAXtB;AAAA;AAYQ,qBAAM;AACJC,gBAAAA,EAAE,EAAEF,EADA;AAEJG,gBAAAA,KAAK,EAAE,CAACF,KAAK,IAAI,EAAV,EAAcG,GAAd,CAAkB,UAAAC,CAAC;AAAA,yBAAI,IAAI3B,SAAS,CAAC4B,SAAd,CAAwBD,CAAxB,CAAJ;AAAA,iBAAnB;AAFH,eAAN;;AAZR;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADiD;AAAA;AAAA;;AAqBjD,SAAOpB,SAAP;AACD,CAtBuB,CAAxB;AAwBAT,OAAO,CAACO,eAAR,GAA0BA,eAA1B","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar multiaddr = require('multiaddr');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar responseTypes = require('./response-types.js');\n\nconst createFindProvs = configure.configure(api => {\n  async function* findProvs(cid, options = {}) {\n    const res = await api.post('dht/findprovs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const message of res.ndjson()) {\n      if (message.Type === responseTypes.Provider && message.Responses) {\n        for (const {ID, Addrs} of message.Responses) {\n          yield {\n            id: ID,\n            addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n          };\n        }\n      }\n    }\n  }\n  return findProvs;\n});\n\nexports.createFindProvs = createFindProvs;\n"]},"metadata":{},"sourceType":"script"}