{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; if (typeof Symbol !== \"undefined\") { async = Symbol.asyncIterator; sync = Symbol.iterator; } while (retry--) { if (async && (method = iterable[async]) != null) { return method.call(iterable); } if (sync && (method = iterable[sync]) != null) { return new AsyncFromSyncIterator(method.call(iterable)); } async = \"@@asyncIterator\"; sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s; this.n = s.next; }; AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; if (ret === undefined) { return Promise.resolve({ value: value, done: true }); } return AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; if (thr === undefined) return Promise.reject(value); return AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }; function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) { return Promise.reject(new TypeError(r + \" is not an object.\")); } var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return new AsyncFromSyncIterator(s); }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar errCode = require('err-code');\n\nvar itPeekable = require('it-peekable');\n\nvar browserStreamToIt = require('browser-readablestream-to-it');\n\nvar all = require('it-all');\n\nvar utils = require('./utils.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\n\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\n\nvar all__default = /*#__PURE__*/_interopDefaultLegacy(all);\n\nfunction normaliseContent(_x) {\n  return _normaliseContent.apply(this, arguments);\n}\n\nfunction _normaliseContent() {\n  _normaliseContent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(input) {\n    var peekable, _yield$peekable$peek, value, done;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!utils.isBytes(input)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", new Blob([input]));\n\n          case 2:\n            if (!(typeof input === 'string' || input instanceof String)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", new Blob([input.toString()]));\n\n          case 4:\n            if (!utils.isBlob(input)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", input);\n\n          case 6:\n            if (utils.isReadableStream(input)) {\n              input = browserStreamToIt__default[\"default\"](input);\n            }\n\n            if (!(Symbol.iterator in input || Symbol.asyncIterator in input)) {\n              _context.next = 28;\n              break;\n            }\n\n            peekable = itPeekable__default[\"default\"](input);\n            _context.next = 11;\n            return peekable.peek();\n\n          case 11:\n            _yield$peekable$peek = _context.sent;\n            value = _yield$peekable$peek.value;\n            done = _yield$peekable$peek.done;\n\n            if (!done) {\n              _context.next = 16;\n              break;\n            }\n\n            return _context.abrupt(\"return\", itToBlob(peekable));\n\n          case 16:\n            peekable.push(value);\n\n            if (!Number.isInteger(value)) {\n              _context.next = 26;\n              break;\n            }\n\n            _context.t0 = Blob;\n            _context.t1 = Uint8Array;\n            _context.next = 22;\n            return all__default[\"default\"](peekable);\n\n          case 22:\n            _context.t2 = _context.sent;\n            _context.t3 = _context.t1.from.call(_context.t1, _context.t2);\n            _context.t4 = [_context.t3];\n            return _context.abrupt(\"return\", new _context.t0(_context.t4));\n\n          case 26:\n            if (!(utils.isBytes(value) || typeof value === 'string' || value instanceof String)) {\n              _context.next = 28;\n              break;\n            }\n\n            return _context.abrupt(\"return\", itToBlob(peekable));\n\n          case 28:\n            throw errCode__default[\"default\"](new Error(\"Unexpected input: \".concat(input)), 'ERR_UNEXPECTED_INPUT');\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _normaliseContent.apply(this, arguments);\n}\n\nfunction itToBlob(_x2) {\n  return _itToBlob.apply(this, arguments);\n}\n\nfunction _itToBlob() {\n  _itToBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(stream) {\n    var parts, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            parts = [];\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context2.prev = 3;\n            _iterator = _asyncIterator(stream);\n\n          case 5:\n            _context2.next = 7;\n            return _iterator.next();\n\n          case 7:\n            if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n              _context2.next = 13;\n              break;\n            }\n\n            chunk = _step.value;\n            parts.push(chunk);\n\n          case 10:\n            _iteratorAbruptCompletion = false;\n            _context2.next = 5;\n            break;\n\n          case 13:\n            _context2.next = 19;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context2.t0;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.prev = 20;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context2.next = 24;\n              break;\n            }\n\n            _context2.next = 24;\n            return _iterator.return();\n\n          case 24:\n            _context2.prev = 24;\n\n            if (!_didIteratorError) {\n              _context2.next = 27;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 27:\n            return _context2.finish(24);\n\n          case 28:\n            return _context2.finish(19);\n\n          case 29:\n            return _context2.abrupt(\"return\", new Blob(parts));\n\n          case 30:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 15, 19, 29], [20,, 24, 28]]);\n  }));\n  return _itToBlob.apply(this, arguments);\n}\n\nexports.normaliseContent = normaliseContent;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-core-utils/cjs/src/files/normalise-content.browser.js"],"names":["Object","defineProperty","exports","value","errCode","require","itPeekable","browserStreamToIt","all","utils","_interopDefaultLegacy","e","errCode__default","itPeekable__default","browserStreamToIt__default","all__default","normaliseContent","input","isBytes","Blob","String","toString","isBlob","isReadableStream","Symbol","iterator","asyncIterator","peekable","peek","done","itToBlob","push","Number","isInteger","Uint8Array","from","Error","stream","parts","chunk"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errCode = require('err-code');\nvar itPeekable = require('it-peekable');\nvar browserStreamToIt = require('browser-readablestream-to-it');\nvar all = require('it-all');\nvar utils = require('./utils.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\nvar all__default = /*#__PURE__*/_interopDefaultLegacy(all);\n\nasync function normaliseContent(input) {\n  if (utils.isBytes(input)) {\n    return new Blob([input]);\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()]);\n  }\n  if (utils.isBlob(input)) {\n    return input;\n  }\n  if (utils.isReadableStream(input)) {\n    input = browserStreamToIt__default[\"default\"](input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable__default[\"default\"](input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      return itToBlob(peekable);\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all__default[\"default\"](peekable))]);\n    }\n    if (utils.isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable);\n    }\n  }\n  throw errCode__default[\"default\"](new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n}\nasync function itToBlob(stream) {\n  const parts = [];\n  for await (const chunk of stream) {\n    parts.push(chunk);\n  }\n  return new Blob(parts);\n}\n\nexports.normaliseContent = normaliseContent;\n"]},"metadata":{},"sourceType":"script"}