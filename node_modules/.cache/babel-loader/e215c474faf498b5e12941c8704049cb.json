{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar errCode = require('err-code');\n\nvar fromString = require('uint8arrays/from-string');\n\nvar browserStreamToIt = require('browser-readablestream-to-it');\n\nvar blobToIt = require('blob-to-it');\n\nvar itPeekable = require('it-peekable');\n\nvar all = require('it-all');\n\nvar map = require('it-map');\n\nvar utils = require('./utils.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\n\nvar blobToIt__default = /*#__PURE__*/_interopDefaultLegacy(blobToIt);\n\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\n\nvar all__default = /*#__PURE__*/_interopDefaultLegacy(all);\n\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nasync function* toAsyncIterable(thing) {\n  yield thing;\n}\n\nasync function normaliseContent(input) {\n  if (utils.isBytes(input)) {\n    return toAsyncIterable(toBytes(input));\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()));\n  }\n\n  if (utils.isBlob(input)) {\n    return blobToIt__default[\"default\"](input);\n  }\n\n  if (utils.isReadableStream(input)) {\n    input = browserStreamToIt__default[\"default\"](input);\n  }\n\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable__default[\"default\"](input);\n    const {\n      value,\n      done\n    } = await peekable.peek();\n\n    if (done) {\n      return toAsyncIterable(new Uint8Array(0));\n    }\n\n    peekable.push(value);\n\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all__default[\"default\"](peekable)));\n    }\n\n    if (utils.isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map__default[\"default\"](peekable, toBytes);\n    }\n  }\n\n  throw errCode__default[\"default\"](new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT');\n}\n\nfunction toBytes(chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk;\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk);\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk);\n  }\n\n  return fromString.fromString(chunk.toString());\n}\n\nexports.normaliseContent = normaliseContent;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-core-utils/cjs/src/files/normalise-content.js"],"names":["Object","defineProperty","exports","value","errCode","require","fromString","browserStreamToIt","blobToIt","itPeekable","all","map","utils","_interopDefaultLegacy","e","errCode__default","browserStreamToIt__default","blobToIt__default","itPeekable__default","all__default","map__default","toAsyncIterable","thing","normaliseContent","input","isBytes","toBytes","String","toString","isBlob","isReadableStream","Symbol","iterator","asyncIterator","peekable","done","peek","Uint8Array","push","Number","isInteger","from","Error","chunk","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errCode = require('err-code');\nvar fromString = require('uint8arrays/from-string');\nvar browserStreamToIt = require('browser-readablestream-to-it');\nvar blobToIt = require('blob-to-it');\nvar itPeekable = require('it-peekable');\nvar all = require('it-all');\nvar map = require('it-map');\nvar utils = require('./utils.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\nvar blobToIt__default = /*#__PURE__*/_interopDefaultLegacy(blobToIt);\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\nvar all__default = /*#__PURE__*/_interopDefaultLegacy(all);\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nasync function* toAsyncIterable(thing) {\n  yield thing;\n}\nasync function normaliseContent(input) {\n  if (utils.isBytes(input)) {\n    return toAsyncIterable(toBytes(input));\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()));\n  }\n  if (utils.isBlob(input)) {\n    return blobToIt__default[\"default\"](input);\n  }\n  if (utils.isReadableStream(input)) {\n    input = browserStreamToIt__default[\"default\"](input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable__default[\"default\"](input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      return toAsyncIterable(new Uint8Array(0));\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all__default[\"default\"](peekable)));\n    }\n    if (utils.isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map__default[\"default\"](peekable, toBytes);\n    }\n  }\n  throw errCode__default[\"default\"](new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toBytes(chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk;\n  }\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n  }\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk);\n  }\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk);\n  }\n  return fromString.fromString(chunk.toString());\n}\n\nexports.normaliseContent = normaliseContent;\n"]},"metadata":{},"sourceType":"script"}