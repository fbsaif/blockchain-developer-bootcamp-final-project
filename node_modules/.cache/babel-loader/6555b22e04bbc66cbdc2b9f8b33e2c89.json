{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createMkdir = configure.configure(api => {\n  async function mkdir(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n\n  return mkdir;\n});\nexports.createMkdir = createMkdir;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/files/mkdir.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createMkdir","api","mkdir","path","options","res","post","signal","searchParams","arg","headers","text"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AAEA,MAAME,WAAW,GAAGH,SAAS,CAACA,SAAV,CAAoBI,GAAG,IAAI;AAC7C,iBAAeC,KAAf,CAAqBC,IAArB,EAAyC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACvC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADwB;AAExCC,MAAAA,YAAY,EAAET,iBAAiB,CAACA,iBAAlB,CAAoC;AAChDU,QAAAA,GAAG,EAAEN,IAD2C;AAEhD,WAAGC;AAF6C,OAApC,CAF0B;AAMxCM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AANuB,KAAxB,CAAlB;AAQA,UAAML,GAAG,CAACM,IAAJ,EAAN;AACD;;AACD,SAAOT,KAAP;AACD,CAbmB,CAApB;AAeAP,OAAO,CAACK,WAAR,GAAsBA,WAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createMkdir = configure.configure(api => {\n  async function mkdir(path, options = {}) {\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return mkdir;\n});\n\nexports.createMkdir = createMkdir;\n"]},"metadata":{},"sourceType":"script"}