{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('./lib/configure.js');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\n\nconst createResolve = configure.configure(api => {\n  async function resolve(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {\n      Path\n    } = await res.json();\n    return Path;\n  }\n\n  return resolve;\n});\nexports.createResolve = createResolve;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/resolve.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createResolve","api","resolve","path","options","res","post","signal","searchParams","arg","headers","Path","json"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,+BAAD,CAA/B;;AAEA,MAAME,aAAa,GAAGH,SAAS,CAACA,SAAV,CAAoBI,GAAG,IAAI;AAC/C,iBAAeC,OAAf,CAAuBC,IAAvB,EAA2C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACzC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,SAAT,EAAoB;AACpCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADoB;AAEpCC,MAAAA,YAAY,EAAET,iBAAiB,CAACA,iBAAlB,CAAoC;AAChDU,QAAAA,GAAG,EAAEN,IAD2C;AAEhD,WAAGC;AAF6C,OAApC,CAFsB;AAMpCM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AANmB,KAApB,CAAlB;AAQA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMN,GAAG,CAACO,IAAJ,EAArB;AACA,WAAOD,IAAP;AACD;;AACD,SAAOT,OAAP;AACD,CAdqB,CAAtB;AAgBAP,OAAO,CAACK,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('./lib/configure.js');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\n\nconst createResolve = configure.configure(api => {\n  async function resolve(path, options = {}) {\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Path} = await res.json();\n    return Path;\n  }\n  return resolve;\n});\n\nexports.createResolve = createResolve;\n"]},"metadata":{},"sourceType":"script"}