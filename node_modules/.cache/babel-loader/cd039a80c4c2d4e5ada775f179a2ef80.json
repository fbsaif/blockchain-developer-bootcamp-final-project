{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar resolve = require('../lib/resolve.js');\n\nvar first = require('it-first');\n\nvar last = require('it-last');\n\nvar errCode = require('err-code');\n\nvar get = require('../block/get.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar first__default = /*#__PURE__*/_interopDefaultLegacy(first);\n\nvar last__default = /*#__PURE__*/_interopDefaultLegacy(last);\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nconst createGet = (codecs, options) => {\n  const fn = configure.configure((api, opts) => {\n    const getBlock = get.createGet(opts);\n\n    const get$1 = async function (cid) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (options.path) {\n        const entry = options.localResolve ? await first__default[\"default\"](resolve.resolve(cid, options.path, codecs, getBlock, options)) : await last__default[\"default\"](resolve.resolve(cid, options.path, codecs, getBlock, options));\n        const result = entry;\n\n        if (!result) {\n          throw errCode__default[\"default\"](new Error('Not found'), 'ERR_NOT_FOUND');\n        }\n\n        return result;\n      }\n\n      const codec = await codecs.getCodec(cid.code);\n      const block = await getBlock(cid, options);\n      const node = codec.decode(block);\n      return {\n        value: node,\n        remainderPath: ''\n      };\n    };\n\n    return get$1;\n  });\n  return fn(options);\n};\n\nexports.createGet = createGet;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/dag/get.js"],"names":["Object","defineProperty","exports","value","configure","require","resolve","first","last","errCode","get","_interopDefaultLegacy","e","first__default","last__default","errCode__default","createGet","codecs","options","fn","api","opts","getBlock","get$1","cid","path","entry","localResolve","result","Error","codec","getCodec","code","block","node","decode","remainderPath"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,mBAAD,CAArB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIK,GAAG,GAAGL,OAAO,CAAC,iBAAD,CAAjB;;AAEA,SAASM,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,cAAc,GAAG,aAAaF,qBAAqB,CAACJ,KAAD,CAAvD;;AACA,IAAIO,aAAa,GAAG,aAAaH,qBAAqB,CAACH,IAAD,CAAtD;;AACA,IAAIO,gBAAgB,GAAG,aAAaJ,qBAAqB,CAACF,OAAD,CAAzD;;AAEA,MAAMO,SAAS,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AACrC,QAAMC,EAAE,GAAGf,SAAS,CAACA,SAAV,CAAoB,CAACgB,GAAD,EAAMC,IAAN,KAAe;AAC5C,UAAMC,QAAQ,GAAGZ,GAAG,CAACM,SAAJ,CAAcK,IAAd,CAAjB;;AACA,UAAME,KAAK,GAAG,gBAAOC,GAAP,EAA6B;AAAA,UAAjBN,OAAiB,uEAAP,EAAO;;AACzC,UAAIA,OAAO,CAACO,IAAZ,EAAkB;AAChB,cAAMC,KAAK,GAAGR,OAAO,CAACS,YAAR,GAAuB,MAAMd,cAAc,CAAC,SAAD,CAAd,CAA0BP,OAAO,CAACA,OAAR,CAAgBkB,GAAhB,EAAqBN,OAAO,CAACO,IAA7B,EAAmCR,MAAnC,EAA2CK,QAA3C,EAAqDJ,OAArD,CAA1B,CAA7B,GAAwH,MAAMJ,aAAa,CAAC,SAAD,CAAb,CAAyBR,OAAO,CAACA,OAAR,CAAgBkB,GAAhB,EAAqBN,OAAO,CAACO,IAA7B,EAAmCR,MAAnC,EAA2CK,QAA3C,EAAqDJ,OAArD,CAAzB,CAA5I;AACA,cAAMU,MAAM,GAAGF,KAAf;;AACA,YAAI,CAACE,MAAL,EAAa;AACX,gBAAMb,gBAAgB,CAAC,SAAD,CAAhB,CAA4B,IAAIc,KAAJ,CAAU,WAAV,CAA5B,EAAoD,eAApD,CAAN;AACD;;AACD,eAAOD,MAAP;AACD;;AACD,YAAME,KAAK,GAAG,MAAMb,MAAM,CAACc,QAAP,CAAgBP,GAAG,CAACQ,IAApB,CAApB;AACA,YAAMC,KAAK,GAAG,MAAMX,QAAQ,CAACE,GAAD,EAAMN,OAAN,CAA5B;AACA,YAAMgB,IAAI,GAAGJ,KAAK,CAACK,MAAN,CAAaF,KAAb,CAAb;AACA,aAAO;AACL9B,QAAAA,KAAK,EAAE+B,IADF;AAELE,QAAAA,aAAa,EAAE;AAFV,OAAP;AAID,KAhBD;;AAiBA,WAAOb,KAAP;AACD,GApBU,CAAX;AAqBA,SAAOJ,EAAE,CAACD,OAAD,CAAT;AACD,CAvBD;;AAyBAhB,OAAO,CAACc,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar resolve = require('../lib/resolve.js');\nvar first = require('it-first');\nvar last = require('it-last');\nvar errCode = require('err-code');\nvar get = require('../block/get.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar first__default = /*#__PURE__*/_interopDefaultLegacy(first);\nvar last__default = /*#__PURE__*/_interopDefaultLegacy(last);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nconst createGet = (codecs, options) => {\n  const fn = configure.configure((api, opts) => {\n    const getBlock = get.createGet(opts);\n    const get$1 = async (cid, options = {}) => {\n      if (options.path) {\n        const entry = options.localResolve ? await first__default[\"default\"](resolve.resolve(cid, options.path, codecs, getBlock, options)) : await last__default[\"default\"](resolve.resolve(cid, options.path, codecs, getBlock, options));\n        const result = entry;\n        if (!result) {\n          throw errCode__default[\"default\"](new Error('Not found'), 'ERR_NOT_FOUND');\n        }\n        return result;\n      }\n      const codec = await codecs.getCodec(cid.code);\n      const block = await getBlock(cid, options);\n      const node = codec.decode(block);\n      return {\n        value: node,\n        remainderPath: ''\n      };\n    };\n    return get$1;\n  });\n  return fn(options);\n};\n\nexports.createGet = createGet;\n"]},"metadata":{},"sourceType":"script"}