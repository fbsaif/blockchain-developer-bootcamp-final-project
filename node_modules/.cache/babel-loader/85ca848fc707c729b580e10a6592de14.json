{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar multiaddr = require('multiaddr');\n\nvar objectToCamel = require('../lib/object-to-camel.js');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar abortSignal = require('../lib/abort-signal.js');\n\nvar nativeAbortController = require('native-abort-controller');\n\nvar toString = require('uint8arrays/to-string');\n\nconst createPut = configure.configure(api => {\n  async function* put(key, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const controller = new nativeAbortController.AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: toString.toString(key),\n        ...options\n      }),\n      ...(await multipartRequest.multipartRequest([value], controller, options.headers))\n    });\n\n    for await (let message of res.ndjson()) {\n      message = objectToCamel.objectToCamel(message);\n\n      if (message.responses) {\n        message.responses = message.responses.map(_ref => {\n          let {\n            ID,\n            Addrs\n          } = _ref;\n          return {\n            id: ID,\n            addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n          };\n        });\n      }\n\n      yield message;\n    }\n  }\n\n  return put;\n});\nexports.createPut = createPut;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/dht/put.js"],"names":["Object","defineProperty","exports","value","multiaddr","require","objectToCamel","configure","toUrlSearchParams","multipartRequest","abortSignal","nativeAbortController","toString","createPut","api","put","key","options","controller","AbortController","signal","res","post","searchParams","arg","headers","message","ndjson","responses","map","ID","Addrs","id","addrs","a","Multiaddr"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,2BAAD,CAA3B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,mCAAD,CAA9B;;AACA,IAAIK,WAAW,GAAGL,OAAO,CAAC,wBAAD,CAAzB;;AACA,IAAIM,qBAAqB,GAAGN,OAAO,CAAC,yBAAD,CAAnC;;AACA,IAAIO,QAAQ,GAAGP,OAAO,CAAC,uBAAD,CAAtB;;AAEA,MAAMQ,SAAS,GAAGN,SAAS,CAACA,SAAV,CAAoBO,GAAG,IAAI;AAC3C,kBAAgBC,GAAhB,CAAoBC,GAApB,EAAyBb,KAAzB,EAA8C;AAAA,QAAdc,OAAc,uEAAJ,EAAI;AAC5C,UAAMC,UAAU,GAAG,IAAIP,qBAAqB,CAACQ,eAA1B,EAAnB;AACA,UAAMC,MAAM,GAAGV,WAAW,CAACA,WAAZ,CAAwBQ,UAAU,CAACE,MAAnC,EAA2CH,OAAO,CAACG,MAAnD,CAAf;AACA,UAAMC,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,SAAT,EAAoB;AACpCF,MAAAA,MADoC;AAEpCG,MAAAA,YAAY,EAAEf,iBAAiB,CAACA,iBAAlB,CAAoC;AAChDgB,QAAAA,GAAG,EAAEZ,QAAQ,CAACA,QAAT,CAAkBI,GAAlB,CAD2C;AAEhD,WAAGC;AAF6C,OAApC,CAFsB;AAMpC,UAAG,MAAMR,gBAAgB,CAACA,gBAAjB,CAAkC,CAACN,KAAD,CAAlC,EAA2Ce,UAA3C,EAAuDD,OAAO,CAACQ,OAA/D,CAAT;AANoC,KAApB,CAAlB;;AAQA,eAAW,IAAIC,OAAf,IAA0BL,GAAG,CAACM,MAAJ,EAA1B,EAAwC;AACtCD,MAAAA,OAAO,GAAGpB,aAAa,CAACA,aAAd,CAA4BoB,OAA5B,CAAV;;AACA,UAAIA,OAAO,CAACE,SAAZ,EAAuB;AACrBF,QAAAA,OAAO,CAACE,SAAR,GAAoBF,OAAO,CAACE,SAAR,CAAkBC,GAAlB,CAAsB;AAAA,cAAC;AAACC,YAAAA,EAAD;AAAKC,YAAAA;AAAL,WAAD;AAAA,iBAAkB;AAC1DC,YAAAA,EAAE,EAAEF,EADsD;AAE1DG,YAAAA,KAAK,EAAE,CAACF,KAAK,IAAI,EAAV,EAAcF,GAAd,CAAkBK,CAAC,IAAI,IAAI9B,SAAS,CAAC+B,SAAd,CAAwBD,CAAxB,CAAvB;AAFmD,WAAlB;AAAA,SAAtB,CAApB;AAID;;AACD,YAAMR,OAAN;AACD;AACF;;AACD,SAAOX,GAAP;AACD,CAxBiB,CAAlB;AA0BAb,OAAO,CAACW,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar multiaddr = require('multiaddr');\nvar objectToCamel = require('../lib/object-to-camel.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar abortSignal = require('../lib/abort-signal.js');\nvar nativeAbortController = require('native-abort-controller');\nvar toString = require('uint8arrays/to-string');\n\nconst createPut = configure.configure(api => {\n  async function* put(key, value, options = {}) {\n    const controller = new nativeAbortController.AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: toString.toString(key),\n        ...options\n      }),\n      ...await multipartRequest.multipartRequest([value], controller, options.headers)\n    });\n    for await (let message of res.ndjson()) {\n      message = objectToCamel.objectToCamel(message);\n      if (message.responses) {\n        message.responses = message.responses.map(({ID, Addrs}) => ({\n          id: ID,\n          addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n        }));\n      }\n      yield message;\n    }\n  }\n  return put;\n});\n\nexports.createPut = createPut;\n"]},"metadata":{},"sourceType":"script"}