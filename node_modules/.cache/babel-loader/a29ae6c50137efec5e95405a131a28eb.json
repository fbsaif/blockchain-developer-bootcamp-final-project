{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createStat = configure.configure(api => {\n  async function stat() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n\n  return stat;\n});\n\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => cid.CID.parse(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}\n\nexports.createStat = createStat;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/bitswap/stat.js"],"names":["Object","defineProperty","exports","value","cid","require","configure","toUrlSearchParams","createStat","api","stat","options","res","post","searchParams","signal","headers","toCoreInterface","json","provideBufLen","ProvideBufLen","wantlist","Wantlist","map","k","CID","parse","peers","Peers","blocksReceived","BigInt","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAA/B;;AAEA,MAAMG,UAAU,GAAGF,SAAS,CAACA,SAAV,CAAoBG,GAAG,IAAI;AAC5C,iBAAeC,IAAf,GAAkC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAChC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyB;AACzCC,MAAAA,YAAY,EAAEP,iBAAiB,CAACA,iBAAlB,CAAoCI,OAApC,CAD2B;AAEzCI,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFyB;AAGzCC,MAAAA,OAAO,EAAEL,OAAO,CAACK;AAHwB,KAAzB,CAAlB;AAKA,WAAOC,eAAe,CAAC,MAAML,GAAG,CAACM,IAAJ,EAAP,CAAtB;AACD;;AACD,SAAOR,IAAP;AACD,CAVkB,CAAnB;;AAWA,SAASO,eAAT,CAAyBL,GAAzB,EAA8B;AAC5B,SAAO;AACLO,IAAAA,aAAa,EAAEP,GAAG,CAACQ,aADd;AAELC,IAAAA,QAAQ,EAAE,CAACT,GAAG,CAACU,QAAJ,IAAgB,EAAjB,EAAqBC,GAArB,CAAyBC,CAAC,IAAIpB,GAAG,CAACqB,GAAJ,CAAQC,KAAR,CAAcF,CAAC,CAAC,GAAD,CAAf,CAA9B,CAFL;AAGLG,IAAAA,KAAK,EAAEf,GAAG,CAACgB,KAAJ,IAAa,EAHf;AAILC,IAAAA,cAAc,EAAEC,MAAM,CAAClB,GAAG,CAACmB,cAAL,CAJjB;AAKLC,IAAAA,YAAY,EAAEF,MAAM,CAAClB,GAAG,CAACqB,YAAL,CALf;AAMLC,IAAAA,UAAU,EAAEJ,MAAM,CAAClB,GAAG,CAACuB,UAAL,CANb;AAOLC,IAAAA,QAAQ,EAAEN,MAAM,CAAClB,GAAG,CAACyB,QAAL,CAPX;AAQLC,IAAAA,eAAe,EAAER,MAAM,CAAClB,GAAG,CAAC2B,eAAL,CARlB;AASLC,IAAAA,eAAe,EAAEV,MAAM,CAAClB,GAAG,CAAC6B,eAAL;AATlB,GAAP;AAWD;;AAEDvC,OAAO,CAACM,UAAR,GAAqBA,UAArB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createStat = configure.configure(api => {\n  async function stat(options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n  return stat;\n});\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => cid.CID.parse(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}\n\nexports.createStat = createStat;\n"]},"metadata":{},"sourceType":"script"}