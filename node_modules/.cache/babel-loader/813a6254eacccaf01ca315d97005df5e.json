{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _asyncGeneratorDelegate = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\");\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; if (typeof Symbol !== \"undefined\") { async = Symbol.asyncIterator; sync = Symbol.iterator; } while (retry--) { if (async && (method = iterable[async]) != null) { return method.call(iterable); } if (sync && (method = iterable[sync]) != null) { return new AsyncFromSyncIterator(method.call(iterable)); } async = \"@@asyncIterator\"; sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s; this.n = s.next; }; AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; if (ret === undefined) { return Promise.resolve({ value: value, done: true }); } return AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; if (thr === undefined) return Promise.reject(value); return AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }; function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) { return Promise.reject(new TypeError(r + \" is not an object.\")); } var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return new AsyncFromSyncIterator(s); }\n\nvar HTTP = require('../http');\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\n */\n\n\nvar urlSource = function urlSource(url, options) {\n  return {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: readURLContent(url, options)\n  };\n};\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {AsyncIterable<Uint8Array>}\n */\n\n\nfunction readURLContent(_x, _x2) {\n  return _readURLContent.apply(this, arguments);\n}\n\nfunction _readURLContent() {\n  _readURLContent = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, options) {\n    var http, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            http = new HTTP();\n            _context.next = 3;\n            return _awaitAsyncGenerator(http.get(url, options));\n\n          case 3:\n            response = _context.sent;\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(response.iterator()), _awaitAsyncGenerator), \"t0\", 5);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _readURLContent.apply(this, arguments);\n}\n\nmodule.exports = urlSource;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-utils/src/files/url-source.js"],"names":["HTTP","require","urlSource","url","options","path","decodeURIComponent","URL","pathname","split","pop","content","readURLContent","http","get","response","iterator","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,OAAN,EAAkB;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEC,kBAAkB,CAAC,IAAIC,GAAJ,CAAQJ,GAAR,EAAaK,QAAb,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiCC,GAAjC,MAA0C,EAA3C,CADnB;AAELC,IAAAA,OAAO,EAAEC,cAAc,CAACT,GAAD,EAAMC,OAAN;AAFlB,GAAP;AAID,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;;;SACiBQ,c;;;;;+EAAjB,iBAAiCT,GAAjC,EAAsCC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQS,YAAAA,IADR,GACe,IAAIb,IAAJ,EADf;AAAA;AAAA,wCAEyBa,IAAI,CAACC,GAAL,CAASX,GAAT,EAAcC,OAAd,CAFzB;;AAAA;AAEQW,YAAAA,QAFR;AAIE,iFAAQA,QAAQ,CAACC,QAAT,EAAR;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOAC,MAAM,CAACC,OAAP,GAAiBhB,SAAjB","sourcesContent":["'use strict'\n\nconst HTTP = require('../http')\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\n */\nconst urlSource = (url, options) => {\n  return {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: readURLContent(url, options)\n  }\n}\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {AsyncIterable<Uint8Array>}\n */\nasync function * readURLContent (url, options) {\n  const http = new HTTP()\n  const response = await http.get(url, options)\n\n  yield * response.iterator()\n}\n\nmodule.exports = urlSource\n"]},"metadata":{},"sourceType":"script"}