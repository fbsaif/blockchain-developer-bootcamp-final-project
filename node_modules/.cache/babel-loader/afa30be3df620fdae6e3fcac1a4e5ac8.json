{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('./lib/configure.js');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\n\nconst createDns = configure.configure(api => {\n  const dns = async function (domain) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Path;\n  };\n\n  return dns;\n});\nexports.createDns = createDns;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/dns.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createDns","api","dns","domain","options","res","post","signal","searchParams","arg","headers","data","json","Path"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,+BAAD,CAA/B;;AAEA,MAAME,SAAS,GAAGH,SAAS,CAACA,SAAV,CAAoBI,GAAG,IAAI;AAC3C,QAAMC,GAAG,GAAG,gBAAOC,MAAP,EAAgC;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;AAC1C,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,KAAT,EAAgB;AAChCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADgB;AAEhCC,MAAAA,YAAY,EAAET,iBAAiB,CAACA,iBAAlB,CAAoC;AAChDU,QAAAA,GAAG,EAAEN,MAD2C;AAEhD,WAAGC;AAF6C,OAApC,CAFkB;AAMhCM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AANe,KAAhB,CAAlB;AAQA,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB;AACA,WAAOD,IAAI,CAACE,IAAZ;AACD,GAXD;;AAYA,SAAOX,GAAP;AACD,CAdiB,CAAlB;AAgBAP,OAAO,CAACK,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('./lib/configure.js');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\n\nconst createDns = configure.configure(api => {\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Path;\n  };\n  return dns;\n});\n\nexports.createDns = createDns;\n"]},"metadata":{},"sourceType":"script"}