{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar abortSignal = require('../lib/abort-signal.js');\n\nvar nativeAbortController = require('native-abort-controller');\n\nvar createPut = function createPut(codecs, options) {\n  var fn = configure.configure(function (api) {\n    var put = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dagNode) {\n        var options,\n            settings,\n            codec,\n            serialized,\n            controller,\n            signal,\n            res,\n            data,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                settings = _objectSpread({\n                  format: 'dag-cbor',\n                  hashAlg: 'sha2-256',\n                  inputEnc: 'raw'\n                }, options);\n                _context.next = 4;\n                return codecs.getCodec(settings.format);\n\n              case 4:\n                codec = _context.sent;\n                serialized = codec.encode(dagNode);\n                controller = new nativeAbortController.AbortController();\n                signal = abortSignal.abortSignal(controller.signal, settings.signal);\n                _context.t0 = api;\n                _context.t1 = _objectSpread;\n                _context.t2 = {\n                  timeout: settings.timeout,\n                  signal: signal,\n                  searchParams: toUrlSearchParams.toUrlSearchParams(settings)\n                };\n                _context.next = 13;\n                return multipartRequest.multipartRequest([serialized], controller, settings.headers);\n\n              case 13:\n                _context.t3 = _context.sent;\n                _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n                _context.next = 17;\n                return _context.t0.post.call(_context.t0, 'dag/put', _context.t4);\n\n              case 17:\n                res = _context.sent;\n                _context.next = 20;\n                return res.json();\n\n              case 20:\n                data = _context.sent;\n                return _context.abrupt(\"return\", cid.CID.parse(data.Cid['/']));\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function put(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return put;\n  });\n  return fn(options);\n};\n\nexports.createPut = createPut;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/dag/put.js"],"names":["Object","defineProperty","exports","value","cid","require","configure","multipartRequest","toUrlSearchParams","abortSignal","nativeAbortController","createPut","codecs","options","fn","api","put","dagNode","settings","format","hashAlg","inputEnc","getCodec","codec","serialized","encode","controller","AbortController","signal","timeout","searchParams","headers","post","res","json","data","CID","parse","Cid"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,mCAAD,CAA9B;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,wBAAD,CAAzB;;AACA,IAAIK,qBAAqB,GAAGL,OAAO,CAAC,yBAAD,CAAnC;;AAEA,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAASC,OAAT,EAAqB;AACrC,MAAMC,EAAE,GAAGR,SAAS,CAACA,SAAV,CAAoB,UAAAS,GAAG,EAAI;AACpC,QAAMC,GAAG;AAAA,0EAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBJ,gBAAAA,OAAhB,2DAA0B,EAA1B;AACJK,gBAAAA,QADI;AAERC,kBAAAA,MAAM,EAAE,UAFA;AAGRC,kBAAAA,OAAO,EAAE,UAHD;AAIRC,kBAAAA,QAAQ,EAAE;AAJF,mBAKLR,OALK;AAAA;AAAA,uBAOUD,MAAM,CAACU,QAAP,CAAgBJ,QAAQ,CAACC,MAAzB,CAPV;;AAAA;AAOJI,gBAAAA,KAPI;AAQJC,gBAAAA,UARI,GAQSD,KAAK,CAACE,MAAN,CAAaR,OAAb,CART;AASJS,gBAAAA,UATI,GASS,IAAIhB,qBAAqB,CAACiB,eAA1B,EATT;AAUJC,gBAAAA,MAVI,GAUKnB,WAAW,CAACA,WAAZ,CAAwBiB,UAAU,CAACE,MAAnC,EAA2CV,QAAQ,CAACU,MAApD,CAVL;AAAA,8BAWQb,GAXR;AAAA;AAAA;AAYRc,kBAAAA,OAAO,EAAEX,QAAQ,CAACW,OAZV;AAaRD,kBAAAA,MAAM,EAANA,MAbQ;AAcRE,kBAAAA,YAAY,EAAEtB,iBAAiB,CAACA,iBAAlB,CAAoCU,QAApC;AAdN;AAAA;AAAA,uBAeCX,gBAAgB,CAACA,gBAAjB,CAAkC,CAACiB,UAAD,CAAlC,EAAgDE,UAAhD,EAA4DR,QAAQ,CAACa,OAArE,CAfD;;AAAA;AAAA;AAAA;AAAA;AAAA,mCAWYC,IAXZ,mBAWiB,SAXjB;;AAAA;AAWJC,gBAAAA,GAXI;AAAA;AAAA,uBAiBSA,GAAG,CAACC,IAAJ,EAjBT;;AAAA;AAiBJC,gBAAAA,IAjBI;AAAA,iDAkBH/B,GAAG,CAACgC,GAAJ,CAAQC,KAAR,CAAcF,IAAI,CAACG,GAAL,CAAS,GAAT,CAAd,CAlBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAHtB,GAAG;AAAA;AAAA;AAAA,OAAT;;AAoBA,WAAOA,GAAP;AACD,GAtBU,CAAX;AAuBA,SAAOF,EAAE,CAACD,OAAD,CAAT;AACD,CAzBD;;AA2BAX,OAAO,CAACS,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar abortSignal = require('../lib/abort-signal.js');\nvar nativeAbortController = require('native-abort-controller');\n\nconst createPut = (codecs, options) => {\n  const fn = configure.configure(api => {\n    const put = async (dagNode, options = {}) => {\n      const settings = {\n        format: 'dag-cbor',\n        hashAlg: 'sha2-256',\n        inputEnc: 'raw',\n        ...options\n      };\n      const codec = await codecs.getCodec(settings.format);\n      const serialized = codec.encode(dagNode);\n      const controller = new nativeAbortController.AbortController();\n      const signal = abortSignal.abortSignal(controller.signal, settings.signal);\n      const res = await api.post('dag/put', {\n        timeout: settings.timeout,\n        signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams(settings),\n        ...await multipartRequest.multipartRequest([serialized], controller, settings.headers)\n      });\n      const data = await res.json();\n      return cid.CID.parse(data.Cid['/']);\n    };\n    return put;\n  });\n  return fn(options);\n};\n\nexports.createPut = createPut;\n"]},"metadata":{},"sourceType":"script"}