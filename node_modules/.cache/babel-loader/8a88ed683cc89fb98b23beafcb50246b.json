{"ast":null,"code":"const initialState = {\n  loading: false,\n  name: \"\",\n  allTokens: [],\n  totalSupply: 0,\n  error: false,\n  errorMsg: \"\"\n};\n\nconst dataReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return { ...initialState,\n        loading: true\n      };\n\n    case \"CHECK_DATA_SUCCESS\":\n      return { ...initialState,\n        loading: false,\n        name: action.payload.name,\n        allTokens: action.payload.allTokens,\n        totalSupply: action.payload.totalSupply\n      };\n\n    case \"CHECK_DATA_FAILED\":\n      return { ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/src/redux/data/dataReducer.js"],"names":["initialState","loading","name","allTokens","totalSupply","error","errorMsg","dataReducer","state","action","type","payload"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,WAAW,EAAE,CAJM;AAKnBC,EAAAA,KAAK,EAAE,KALY;AAMnBC,EAAAA,QAAQ,EAAE;AANS,CAArB;;AASA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,aAAO,EACL,GAAGV,YADE;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAK,oBAAL;AACE,aAAO,EACL,GAAGD,YADE;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,IAAI,EAAEO,MAAM,CAACE,OAAP,CAAeT,IAHhB;AAILC,QAAAA,SAAS,EAAEM,MAAM,CAACE,OAAP,CAAeR,SAJrB;AAKLC,QAAAA,WAAW,EAAEK,MAAM,CAACE,OAAP,CAAeP;AALvB,OAAP;;AAOF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGJ,YADE;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGLI,QAAAA,KAAK,EAAE,IAHF;AAILC,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAJZ,OAAP;;AAMF;AACE,aAAOH,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["const initialState = {\n  loading: false,\n  name: \"\",\n  allTokens: [],\n  totalSupply: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...initialState,\n        loading: false,\n        name: action.payload.name,\n        allTokens: action.payload.allTokens,\n        totalSupply: action.payload.totalSupply,\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n"]},"metadata":{},"sourceType":"module"}