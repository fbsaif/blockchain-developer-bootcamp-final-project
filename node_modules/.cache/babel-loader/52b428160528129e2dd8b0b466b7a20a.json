{"ast":null,"code":"const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\"\n};\n\nconst blockchainReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return { ...initialState,\n        loading: true\n      };\n\n    case \"CONNECTION_SUCCESS\":\n      return { ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3\n      };\n\n    case \"CONNECTION_FAILED\":\n      return { ...initialState,\n        loading: false,\n        errorMsg: action.payload\n      };\n\n    case \"UPDATE_ACCOUNT\":\n      return { ...state,\n        account: action.payload.account\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/src/redux/blockchain/blockchainReducer.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,aAAa,EAAE,IAHI;AAInBC,EAAAA,IAAI,EAAE,IAJa;AAKnBC,EAAAA,QAAQ,EAAE;AALS,CAArB;;AAQA,MAAMC,iBAAiB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,aAAO,EACL,GAAGT,YADE;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAK,oBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELN,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeR,OAHnB;AAILC,QAAAA,aAAa,EAAEK,MAAM,CAACE,OAAP,CAAeP,aAJzB;AAKLC,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeN;AALhB,OAAP;;AAOF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGJ,YADE;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGLI,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAHZ,OAAP;;AAKF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeR;AAFnB,OAAP;;AAIF;AACE,aAAOK,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,iBAAf","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n"]},"metadata":{},"sourceType":"module"}