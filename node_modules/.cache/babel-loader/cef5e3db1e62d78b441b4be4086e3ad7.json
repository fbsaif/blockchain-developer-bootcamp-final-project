{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nasync function* resolve(cid$1, path, codecs, getBlock, options) {\n  const load = async cid => {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await getBlock(cid, options);\n    return codec.decode(block);\n  };\n\n  const parts = path.split('/').filter(Boolean);\n  let value = await load(cid$1);\n  let lastCid = cid$1;\n\n  if (!parts.length) {\n    yield {\n      value,\n      remainderPath: ''\n    };\n  }\n\n  while (parts.length) {\n    const key = parts.shift();\n\n    if (!key) {\n      throw errCode__default[\"default\"](new Error(`Could not resolve path \"${path}\"`), 'ERR_INVALID_PATH');\n    }\n\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key];\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      };\n    } else {\n      throw errCode__default[\"default\"](new Error(`no link named \"${key}\" under ${lastCid}`), 'ERR_NO_LINK');\n    }\n\n    const cid$1 = cid.CID.asCID(value);\n\n    if (cid$1) {\n      lastCid = cid$1;\n      value = await load(value);\n    }\n  }\n}\n\nexports.resolve = resolve;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/lib/resolve.js"],"names":["Object","defineProperty","exports","value","cid","require","errCode","_interopDefaultLegacy","e","errCode__default","resolve","cid$1","path","codecs","getBlock","options","load","codec","getCodec","code","block","decode","parts","split","filter","Boolean","lastCid","length","remainderPath","key","shift","Error","prototype","hasOwnProperty","call","join","CID","asCID"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AAEA,SAASE,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,gBAAgB,GAAG,aAAaF,qBAAqB,CAACD,OAAD,CAAzD;;AAEA,gBAAgBI,OAAhB,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6CC,QAA7C,EAAuDC,OAAvD,EAAgE;AAC9D,QAAMC,IAAI,GAAG,MAAMZ,GAAN,IAAa;AACxB,UAAMa,KAAK,GAAG,MAAMJ,MAAM,CAACK,QAAP,CAAgBd,GAAG,CAACe,IAApB,CAApB;AACA,UAAMC,KAAK,GAAG,MAAMN,QAAQ,CAACV,GAAD,EAAMW,OAAN,CAA5B;AACA,WAAOE,KAAK,CAACI,MAAN,CAAaD,KAAb,CAAP;AACD,GAJD;;AAKA,QAAME,KAAK,GAAGV,IAAI,CAACW,KAAL,CAAW,GAAX,EAAgBC,MAAhB,CAAuBC,OAAvB,CAAd;AACA,MAAItB,KAAK,GAAG,MAAMa,IAAI,CAACL,KAAD,CAAtB;AACA,MAAIe,OAAO,GAAGf,KAAd;;AACA,MAAI,CAACW,KAAK,CAACK,MAAX,EAAmB;AACjB,UAAM;AACJxB,MAAAA,KADI;AAEJyB,MAAAA,aAAa,EAAE;AAFX,KAAN;AAID;;AACD,SAAON,KAAK,CAACK,MAAb,EAAqB;AACnB,UAAME,GAAG,GAAGP,KAAK,CAACQ,KAAN,EAAZ;;AACA,QAAI,CAACD,GAAL,EAAU;AACR,YAAMpB,gBAAgB,CAAC,SAAD,CAAhB,CAA4B,IAAIsB,KAAJ,CAAW,2BAA2BnB,IAAM,GAA5C,CAA5B,EAA6E,kBAA7E,CAAN;AACD;;AACD,QAAIZ,MAAM,CAACgC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC/B,KAArC,EAA4C0B,GAA5C,CAAJ,EAAsD;AACpD1B,MAAAA,KAAK,GAAGA,KAAK,CAAC0B,GAAD,CAAb;AACA,YAAM;AACJ1B,QAAAA,KADI;AAEJyB,QAAAA,aAAa,EAAEN,KAAK,CAACa,IAAN,CAAW,GAAX;AAFX,OAAN;AAID,KAND,MAMO;AACL,YAAM1B,gBAAgB,CAAC,SAAD,CAAhB,CAA4B,IAAIsB,KAAJ,CAAW,kBAAkBF,GAAK,WAAWH,OAAS,EAAtD,CAA5B,EAAsF,aAAtF,CAAN;AACD;;AACD,UAAMf,KAAK,GAAGP,GAAG,CAACgC,GAAJ,CAAQC,KAAR,CAAclC,KAAd,CAAd;;AACA,QAAIQ,KAAJ,EAAW;AACTe,MAAAA,OAAO,GAAGf,KAAV;AACAR,MAAAA,KAAK,GAAG,MAAMa,IAAI,CAACb,KAAD,CAAlB;AACD;AACF;AACF;;AAEDD,OAAO,CAACQ,OAAR,GAAkBA,OAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nasync function* resolve(cid$1, path, codecs, getBlock, options) {\n  const load = async cid => {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await getBlock(cid, options);\n    return codec.decode(block);\n  };\n  const parts = path.split('/').filter(Boolean);\n  let value = await load(cid$1);\n  let lastCid = cid$1;\n  if (!parts.length) {\n    yield {\n      value,\n      remainderPath: ''\n    };\n  }\n  while (parts.length) {\n    const key = parts.shift();\n    if (!key) {\n      throw errCode__default[\"default\"](new Error(`Could not resolve path \"${ path }\"`), 'ERR_INVALID_PATH');\n    }\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key];\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      };\n    } else {\n      throw errCode__default[\"default\"](new Error(`no link named \"${ key }\" under ${ lastCid }`), 'ERR_NO_LINK');\n    }\n    const cid$1 = cid.CID.asCID(value);\n    if (cid$1) {\n      lastCid = cid$1;\n      value = await load(value);\n    }\n  }\n}\n\nexports.resolve = resolve;\n"]},"metadata":{},"sourceType":"script"}