{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createVersion = configure.configure(api => {\n  async function version() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return res.Version;\n  }\n\n  return version;\n});\nexports.createVersion = createVersion;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/repo/version.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createVersion","api","version","options","res","post","signal","searchParams","headers","json","Version"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AAEA,MAAME,aAAa,GAAGH,SAAS,CAACA,SAAV,CAAoBI,GAAG,IAAI;AAC/C,iBAAeC,OAAf,GAAqC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACnC,UAAMC,GAAG,GAAG,MAAM,CAAC,MAAMH,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyB;AAChDC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADgC;AAEhDC,MAAAA,YAAY,EAAER,iBAAiB,CAACA,iBAAlB,CAAoCI,OAApC,CAFkC;AAGhDK,MAAAA,OAAO,EAAEL,OAAO,CAACK;AAH+B,KAAzB,CAAP,EAIdC,IAJc,EAAlB;AAKA,WAAOL,GAAG,CAACM,OAAX;AACD;;AACD,SAAOR,OAAP;AACD,CAVqB,CAAtB;AAYAP,OAAO,CAACK,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createVersion = configure.configure(api => {\n  async function version(options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return res.Version;\n  }\n  return version;\n});\n\nexports.createVersion = createVersion;\n"]},"metadata":{},"sourceType":"script"}