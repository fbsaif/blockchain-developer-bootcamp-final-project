{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar errCode = require('err-code');\n\nvar cid = require('multiformats/cid');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nasync function* normaliseInput(input) {\n  if (input === null || input === undefined) {\n    throw errCode__default[\"default\"](new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT');\n  }\n\n  const cid$1 = cid.CID.asCID(input);\n\n  if (cid$1) {\n    yield toPin({\n      cid: cid$1\n    });\n    return;\n  }\n\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({\n      path: input\n    });\n    return;\n  }\n\n  if (input.cid != null || input.path != null) {\n    return yield toPin(input);\n  }\n\n  if (Symbol.iterator in input) {\n    const iterator = input[Symbol.iterator]();\n    const first = iterator.next();\n    if (first.done) return iterator;\n\n    if (cid.CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({\n        cid: first.value\n      });\n\n      for (const cid of iterator) {\n        yield toPin({\n          cid\n        });\n      }\n\n      return;\n    }\n\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n\n      for (const obj of iterator) {\n        yield toPin(obj);\n      }\n\n      return;\n    }\n\n    throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n\n  if (Symbol.asyncIterator in input) {\n    const iterator = input[Symbol.asyncIterator]();\n    const first = await iterator.next();\n    if (first.done) return iterator;\n\n    if (cid.CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({\n        cid: first.value\n      });\n\n      for await (const cid of iterator) {\n        yield toPin({\n          cid\n        });\n      }\n\n      return;\n    }\n\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n\n      for await (const obj of iterator) {\n        yield toPin(obj);\n      }\n\n      return;\n    }\n\n    throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n\n  throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\n\nfunction toPin(input) {\n  const path = input.cid || `${input.path}`;\n\n  if (!path) {\n    throw errCode__default[\"default\"](new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT');\n  }\n\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  };\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata;\n  }\n\n  return pin;\n}\n\nexports.normaliseInput = normaliseInput;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-core-utils/cjs/src/pins/normalise-input.js"],"names":["Object","defineProperty","exports","value","errCode","require","cid","_interopDefaultLegacy","e","errCode__default","normaliseInput","input","undefined","Error","cid$1","CID","asCID","toPin","String","path","Symbol","iterator","first","next","done","obj","asyncIterator","pin","recursive","metadata"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errCode = require('err-code');\nvar cid = require('multiformats/cid');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nasync function* normaliseInput(input) {\n  if (input === null || input === undefined) {\n    throw errCode__default[\"default\"](new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n  }\n  const cid$1 = cid.CID.asCID(input);\n  if (cid$1) {\n    yield toPin({ cid: cid$1 });\n    return;\n  }\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input });\n    return;\n  }\n  if (input.cid != null || input.path != null) {\n    return yield toPin(input);\n  }\n  if (Symbol.iterator in input) {\n    const iterator = input[Symbol.iterator]();\n    const first = iterator.next();\n    if (first.done)\n      return iterator;\n    if (cid.CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value });\n      for (const cid of iterator) {\n        yield toPin({ cid });\n      }\n      return;\n    }\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n      for (const obj of iterator) {\n        yield toPin(obj);\n      }\n      return;\n    }\n    throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (Symbol.asyncIterator in input) {\n    const iterator = input[Symbol.asyncIterator]();\n    const first = await iterator.next();\n    if (first.done)\n      return iterator;\n    if (cid.CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value });\n      for await (const cid of iterator) {\n        yield toPin({ cid });\n      }\n      return;\n    }\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n      for await (const obj of iterator) {\n        yield toPin(obj);\n      }\n      return;\n    }\n    throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toPin(input) {\n  const path = input.cid || `${ input.path }`;\n  if (!path) {\n    throw errCode__default[\"default\"](new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT');\n  }\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  };\n  if (input.metadata != null) {\n    pin.metadata = input.metadata;\n  }\n  return pin;\n}\n\nexports.normaliseInput = normaliseInput;\n"]},"metadata":{},"sourceType":"script"}