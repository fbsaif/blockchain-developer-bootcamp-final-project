{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; if (typeof Symbol !== \"undefined\") { async = Symbol.asyncIterator; sync = Symbol.iterator; } while (retry--) { if (async && (method = iterable[async]) != null) { return method.call(iterable); } if (sync && (method = iterable[sync]) != null) { return new AsyncFromSyncIterator(method.call(iterable)); } async = \"@@asyncIterator\"; sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s; this.n = s.next; }; AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; if (ret === undefined) { return Promise.resolve({ value: value, done: true }); } return AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; if (thr === undefined) return Promise.reject(value); return AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }; function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) { return Promise.reject(new TypeError(r + \" is not an object.\")); } var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return new AsyncFromSyncIterator(s); }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar multiaddr = require('multiaddr');\n\nvar objectToCamel = require('../lib/object-to-camel.js');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar abortSignal = require('../lib/abort-signal.js');\n\nvar nativeAbortController = require('native-abort-controller');\n\nvar toString = require('uint8arrays/to-string');\n\nvar createPut = configure.configure(function (api) {\n  function put(_x, _x2) {\n    return _put.apply(this, arguments);\n  }\n\n  function _put() {\n    _put = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key, value) {\n      var options,\n          controller,\n          signal,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          message,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              controller = new nativeAbortController.AbortController();\n              signal = abortSignal.abortSignal(controller.signal, options.signal);\n              _context.t0 = _awaitAsyncGenerator;\n              _context.t1 = api;\n              _context.t2 = _objectSpread;\n              _context.t3 = {\n                signal: signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: toString.toString(key)\n                }, options))\n              };\n              _context.next = 9;\n              return _awaitAsyncGenerator(multipartRequest.multipartRequest([value], controller, options.headers));\n\n            case 9:\n              _context.t4 = _context.sent;\n              _context.t5 = (0, _context.t2)(_context.t3, _context.t4);\n              _context.t6 = _context.t1.post.call(_context.t1, 'dht/put', _context.t5);\n              _context.next = 14;\n              return (0, _context.t0)(_context.t6);\n\n            case 14:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 17;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 19:\n              _context.next = 21;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 21:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 30;\n                break;\n              }\n\n              message = _step.value;\n              message = objectToCamel.objectToCamel(message);\n\n              if (message.responses) {\n                message.responses = message.responses.map(function (_ref) {\n                  var ID = _ref.ID,\n                      Addrs = _ref.Addrs;\n                  return {\n                    id: ID,\n                    addrs: (Addrs || []).map(function (a) {\n                      return new multiaddr.Multiaddr(a);\n                    })\n                  };\n                });\n              }\n\n              _context.next = 27;\n              return message;\n\n            case 27:\n              _iteratorAbruptCompletion = false;\n              _context.next = 19;\n              break;\n\n            case 30:\n              _context.next = 36;\n              break;\n\n            case 32:\n              _context.prev = 32;\n              _context.t7 = _context[\"catch\"](17);\n              _didIteratorError = true;\n              _iteratorError = _context.t7;\n\n            case 36:\n              _context.prev = 36;\n              _context.prev = 37;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 41;\n                break;\n              }\n\n              _context.next = 41;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 41:\n              _context.prev = 41;\n\n              if (!_didIteratorError) {\n                _context.next = 44;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 44:\n              return _context.finish(41);\n\n            case 45:\n              return _context.finish(36);\n\n            case 46:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[17, 32, 36, 46], [37,, 41, 45]]);\n    }));\n    return _put.apply(this, arguments);\n  }\n\n  return put;\n});\nexports.createPut = createPut;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/dht/put.js"],"names":["Object","defineProperty","exports","value","multiaddr","require","objectToCamel","configure","toUrlSearchParams","multipartRequest","abortSignal","nativeAbortController","toString","createPut","api","put","key","options","controller","AbortController","signal","searchParams","arg","headers","post","res","ndjson","message","responses","map","ID","Addrs","id","addrs","a","Multiaddr"],"mappings":"AAAA;;;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,2BAAD,CAA3B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,mCAAD,CAA9B;;AACA,IAAIK,WAAW,GAAGL,OAAO,CAAC,wBAAD,CAAzB;;AACA,IAAIM,qBAAqB,GAAGN,OAAO,CAAC,yBAAD,CAAnC;;AACA,IAAIO,QAAQ,GAAGP,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMQ,SAAS,GAAGN,SAAS,CAACA,SAAV,CAAoB,UAAAO,GAAG,EAAI;AAAA,WAC3BC,GAD2B;AAAA;AAAA;;AAAA;AAAA,sEAC3C,iBAAoBC,GAApB,EAAyBb,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAgCc,cAAAA,OAAhC,2DAA0C,EAA1C;AACQC,cAAAA,UADR,GACqB,IAAIP,qBAAqB,CAACQ,eAA1B,EADrB;AAEQC,cAAAA,MAFR,GAEiBV,WAAW,CAACA,WAAZ,CAAwBQ,UAAU,CAACE,MAAnC,EAA2CH,OAAO,CAACG,MAAnD,CAFjB;AAAA;AAAA,4BAGoBN,GAHpB;AAAA;AAAA;AAIIM,gBAAAA,MAAM,EAANA,MAJJ;AAKIC,gBAAAA,YAAY,EAAEb,iBAAiB,CAACA,iBAAlB;AACZc,kBAAAA,GAAG,EAAEV,QAAQ,CAACA,QAAT,CAAkBI,GAAlB;AADO,mBAETC,OAFS;AALlB;AAAA;AAAA,0CASaR,gBAAgB,CAACA,gBAAjB,CAAkC,CAACN,KAAD,CAAlC,EAA2Ce,UAA3C,EAAuDD,OAAO,CAACM,OAA/D,CATb;;AAAA;AAAA;AAAA;AAAA,wCAGwBC,IAHxB,mBAG6B,SAH7B;AAAA;AAAA;;AAAA;AAGQC,cAAAA,GAHR;AAAA;AAAA;AAAA;AAAA,yCAW4BA,GAAG,CAACC,MAAJ,EAX5B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWiBC,cAAAA,OAXjB;AAYIA,cAAAA,OAAO,GAAGrB,aAAa,CAACA,aAAd,CAA4BqB,OAA5B,CAAV;;AACA,kBAAIA,OAAO,CAACC,SAAZ,EAAuB;AACrBD,gBAAAA,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACC,SAAR,CAAkBC,GAAlB,CAAsB;AAAA,sBAAEC,EAAF,QAAEA,EAAF;AAAA,sBAAMC,KAAN,QAAMA,KAAN;AAAA,yBAAkB;AAC1DC,oBAAAA,EAAE,EAAEF,EADsD;AAE1DG,oBAAAA,KAAK,EAAE,CAACF,KAAK,IAAI,EAAV,EAAcF,GAAd,CAAkB,UAAAK,CAAC;AAAA,6BAAI,IAAI9B,SAAS,CAAC+B,SAAd,CAAwBD,CAAxB,CAAJ;AAAA,qBAAnB;AAFmD,mBAAlB;AAAA,iBAAtB,CAApB;AAID;;AAlBL;AAmBI,qBAAMP,OAAN;;AAnBJ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD2C;AAAA;AAAA;;AAuB3C,SAAOZ,GAAP;AACD,CAxBiB,CAAlB;AA0BAb,OAAO,CAACW,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar multiaddr = require('multiaddr');\nvar objectToCamel = require('../lib/object-to-camel.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar abortSignal = require('../lib/abort-signal.js');\nvar nativeAbortController = require('native-abort-controller');\nvar toString = require('uint8arrays/to-string');\n\nconst createPut = configure.configure(api => {\n  async function* put(key, value, options = {}) {\n    const controller = new nativeAbortController.AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: toString.toString(key),\n        ...options\n      }),\n      ...await multipartRequest.multipartRequest([value], controller, options.headers)\n    });\n    for await (let message of res.ndjson()) {\n      message = objectToCamel.objectToCamel(message);\n      if (message.responses) {\n        message.responses = message.responses.map(({ID, Addrs}) => ({\n          id: ID,\n          addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n        }));\n      }\n      yield message;\n    }\n  }\n  return put;\n});\n\nexports.createPut = createPut;\n"]},"metadata":{},"sourceType":"script"}