{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/intvirtue/Last-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; if (typeof Symbol !== \"undefined\") { async = Symbol.asyncIterator; sync = Symbol.iterator; } while (retry--) { if (async && (method = iterable[async]) != null) { return method.call(iterable); } if (sync && (method = iterable[sync]) != null) { return new AsyncFromSyncIterator(method.call(iterable)); } async = \"@@asyncIterator\"; sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s; this.n = s.next; }; AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; if (ret === undefined) { return Promise.resolve({ value: value, done: true }); } return AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; if (thr === undefined) return Promise.reject(value); return AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }; function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) { return Promise.reject(new TypeError(r + \" is not an object.\")); } var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return new AsyncFromSyncIterator(s); }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar abortSignal = require('../lib/abort-signal.js');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar nativeAbortController = require('native-abort-controller');\n\nvar cid = require('multiformats/cid');\n\nvar createImport = configure.configure(function (api) {\n  function dagImport(_x) {\n    return _dagImport.apply(this, arguments);\n  }\n\n  function _dagImport() {\n    _dagImport = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n      var options,\n          controller,\n          signal,\n          _yield$_awaitAsyncGen,\n          headers,\n          body,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          Root,\n          Cid,\n          PinErrorMsg,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              controller = new nativeAbortController.AbortController();\n              signal = abortSignal.abortSignal(controller.signal, options.signal);\n              _context.next = 5;\n              return _awaitAsyncGenerator(multipartRequest.multipartRequest(source, controller, options.headers));\n\n            case 5:\n              _yield$_awaitAsyncGen = _context.sent;\n              headers = _yield$_awaitAsyncGen.headers;\n              body = _yield$_awaitAsyncGen.body;\n              _context.next = 10;\n              return _awaitAsyncGenerator(api.post('dag/import', {\n                signal: signal,\n                headers: headers,\n                body: body,\n                searchParams: toUrlSearchParams.toUrlSearchParams({\n                  'pin-roots': options.pinRoots\n                })\n              }));\n\n            case 10:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 13;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 15:\n              _context.next = 17;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 17:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 26;\n                break;\n              }\n\n              Root = _step.value.Root;\n\n              if (!(Root !== undefined)) {\n                _context.next = 23;\n                break;\n              }\n\n              Cid = Root.Cid['/'], PinErrorMsg = Root.PinErrorMsg;\n              _context.next = 23;\n              return {\n                root: {\n                  cid: cid.CID.parse(Cid),\n                  pinErrorMsg: PinErrorMsg\n                }\n              };\n\n            case 23:\n              _iteratorAbruptCompletion = false;\n              _context.next = 15;\n              break;\n\n            case 26:\n              _context.next = 32;\n              break;\n\n            case 28:\n              _context.prev = 28;\n              _context.t0 = _context[\"catch\"](13);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 32:\n              _context.prev = 32;\n              _context.prev = 33;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 37;\n                break;\n              }\n\n              _context.next = 37;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 37:\n              _context.prev = 37;\n\n              if (!_didIteratorError) {\n                _context.next = 40;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 40:\n              return _context.finish(37);\n\n            case 41:\n              return _context.finish(32);\n\n            case 42:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[13, 28, 32, 42], [33,, 37, 41]]);\n    }));\n    return _dagImport.apply(this, arguments);\n  }\n\n  return dagImport;\n});\nexports.createImport = createImport;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/dag/import.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","abortSignal","multipartRequest","nativeAbortController","cid","createImport","api","dagImport","source","options","controller","AbortController","signal","headers","body","post","searchParams","pinRoots","res","ndjson","Root","undefined","Cid","PinErrorMsg","root","CID","parse","pinErrorMsg"],"mappings":"AAAA;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,wBAAD,CAAzB;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,mCAAD,CAA9B;;AACA,IAAII,qBAAqB,GAAGJ,OAAO,CAAC,yBAAD,CAAnC;;AACA,IAAIK,GAAG,GAAGL,OAAO,CAAC,kBAAD,CAAjB;;AAEA,IAAMM,YAAY,GAAGP,SAAS,CAACA,SAAV,CAAoB,UAAAQ,GAAG,EAAI;AAAA,WAC9BC,SAD8B;AAAA;AAAA;;AAAA;AAAA,4EAC9C,iBAA0BC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAkCC,cAAAA,OAAlC,2DAA4C,EAA5C;AACQC,cAAAA,UADR,GACqB,IAAIP,qBAAqB,CAACQ,eAA1B,EADrB;AAEQC,cAAAA,MAFR,GAEiBX,WAAW,CAACA,WAAZ,CAAwBS,UAAU,CAACE,MAAnC,EAA2CH,OAAO,CAACG,MAAnD,CAFjB;AAAA;AAAA,0CAGgCV,gBAAgB,CAACA,gBAAjB,CAAkCM,MAAlC,EAA0CE,UAA1C,EAAsDD,OAAO,CAACI,OAA9D,CAHhC;;AAAA;AAAA;AAGSA,cAAAA,OAHT,yBAGSA,OAHT;AAGkBC,cAAAA,IAHlB,yBAGkBA,IAHlB;AAAA;AAAA,0CAIoBR,GAAG,CAACS,IAAJ,CAAS,YAAT,EAAuB;AACvCH,gBAAAA,MAAM,EAANA,MADuC;AAEvCC,gBAAAA,OAAO,EAAPA,OAFuC;AAGvCC,gBAAAA,IAAI,EAAJA,IAHuC;AAIvCE,gBAAAA,YAAY,EAAEhB,iBAAiB,CAACA,iBAAlB,CAAoC;AAAE,+BAAaS,OAAO,CAACQ;AAAvB,iBAApC;AAJyB,eAAvB,CAJpB;;AAAA;AAIQC,cAAAA,GAJR;AAAA;AAAA;AAAA;AAAA,yCAU6BA,GAAG,CAACC,MAAJ,EAV7B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUoBC,cAAAA,IAVpB,eAUoBA,IAVpB;;AAAA,oBAWQA,IAAI,KAAKC,SAXjB;AAAA;AAAA;AAAA;;AAamBC,cAAAA,GAbnB,GAeUF,IAfV,CAaQE,GAbR,CAac,GAbd,GAcQC,WAdR,GAeUH,IAfV,CAcQG,WAdR;AAAA;AAgBM,qBAAM;AACJC,gBAAAA,IAAI,EAAE;AACJpB,kBAAAA,GAAG,EAAEA,GAAG,CAACqB,GAAJ,CAAQC,KAAR,CAAcJ,GAAd,CADD;AAEJK,kBAAAA,WAAW,EAAEJ;AAFT;AADF,eAAN;;AAhBN;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD8C;AAAA;AAAA;;AA0B9C,SAAOhB,SAAP;AACD,CA3BoB,CAArB;AA6BAX,OAAO,CAACS,YAAR,GAAuBA,YAAvB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar abortSignal = require('../lib/abort-signal.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar nativeAbortController = require('native-abort-controller');\nvar cid = require('multiformats/cid');\n\nconst createImport = configure.configure(api => {\n  async function* dagImport(source, options = {}) {\n    const controller = new nativeAbortController.AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const {headers, body} = await multipartRequest.multipartRequest(source, controller, options.headers);\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams.toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    });\n    for await (const {Root} of res.ndjson()) {\n      if (Root !== undefined) {\n        const {\n          Cid: {'/': Cid},\n          PinErrorMsg\n        } = Root;\n        yield {\n          root: {\n            cid: cid.CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        };\n      }\n    }\n  }\n  return dagImport;\n});\n\nexports.createImport = createImport;\n"]},"metadata":{},"sourceType":"script"}