{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createResolve = configure.configure(api => {\n  const resolve = async function (ipfsPath) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: cid.CID.parse(data.Cid['/']),\n      remainderPath: data.RemPath\n    };\n  };\n\n  return resolve;\n});\nexports.createResolve = createResolve;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/dag/resolve.js"],"names":["Object","defineProperty","exports","value","cid","require","configure","toUrlSearchParams","createResolve","api","resolve","ipfsPath","options","res","post","signal","searchParams","arg","path","replace","headers","data","json","CID","parse","Cid","remainderPath","RemPath"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAA/B;;AAEA,MAAMG,aAAa,GAAGF,SAAS,CAACA,SAAV,CAAoBG,GAAG,IAAI;AAC/C,QAAMC,OAAO,GAAG,gBAAOC,QAAP,EAAkC;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;AAChD,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADwB;AAExCC,MAAAA,YAAY,EAAET,iBAAiB,CAACA,iBAAlB,CAAoC;AAChDU,QAAAA,GAAG,EAAG,GAAGN,QAAU,GAAGC,OAAO,CAACM,IAAR,GAAgB,IAAIN,OAAO,CAACM,IAAM,EAAnB,CAAqBC,OAArB,CAA6B,SAA7B,EAAwC,GAAxC,CAAf,GAA8D,EAAI,EADxC;AAEhD,WAAGP;AAF6C,OAApC,CAF0B;AAMxCQ,MAAAA,OAAO,EAAER,OAAO,CAACQ;AANuB,KAAxB,CAAlB;AAQA,UAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAAnB;AACA,WAAO;AACLlB,MAAAA,GAAG,EAAEA,GAAG,CAACmB,GAAJ,CAAQC,KAAR,CAAcH,IAAI,CAACI,GAAL,CAAS,GAAT,CAAd,CADA;AAELC,MAAAA,aAAa,EAAEL,IAAI,CAACM;AAFf,KAAP;AAID,GAdD;;AAeA,SAAOjB,OAAP;AACD,CAjBqB,CAAtB;AAmBAR,OAAO,CAACM,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createResolve = configure.configure(api => {\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: `${ ipfsPath }${ options.path ? `/${ options.path }`.replace(/\\/[/]+/g, '/') : '' }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: cid.CID.parse(data.Cid['/']),\n      remainderPath: data.RemPath\n    };\n  };\n  return resolve;\n});\n\nexports.createResolve = createResolve;\n"]},"metadata":{},"sourceType":"script"}