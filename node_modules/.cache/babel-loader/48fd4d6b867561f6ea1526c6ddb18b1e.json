{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar multiaddr = require('multiaddr');\n\nvar objectToCamel = require('../lib/object-to-camel.js');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createQuery = configure.configure(api => {\n  async function* query(peerId) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n\n    for await (let message of res.ndjson()) {\n      message = objectToCamel.objectToCamel(message);\n      message.responses = (message.responses || []).map(_ref => {\n        let {\n          ID,\n          Addrs\n        } = _ref;\n        return {\n          id: ID,\n          addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n        };\n      });\n      yield message;\n    }\n  }\n\n  return query;\n});\nexports.createQuery = createQuery;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/dht/query.js"],"names":["Object","defineProperty","exports","value","multiaddr","require","objectToCamel","configure","toUrlSearchParams","createQuery","api","query","peerId","options","res","post","signal","searchParams","arg","toString","headers","message","ndjson","responses","map","ID","Addrs","id","addrs","a","Multiaddr"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,2BAAD,CAA3B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAD,CAA/B;;AAEA,MAAMI,WAAW,GAAGF,SAAS,CAACA,SAAV,CAAoBG,GAAG,IAAI;AAC7C,kBAAgBC,KAAhB,CAAsBC,MAAtB,EAA4C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC1C,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB;AACtCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADsB;AAEtCC,MAAAA,YAAY,EAAET,iBAAiB,CAACA,iBAAlB,CAAoC;AAChDU,QAAAA,GAAG,EAAEN,MAAM,CAACO,QAAP,EAD2C;AAEhD,WAAGN;AAF6C,OAApC,CAFwB;AAMtCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AANqB,KAAtB,CAAlB;;AAQA,eAAW,IAAIC,OAAf,IAA0BP,GAAG,CAACQ,MAAJ,EAA1B,EAAwC;AACtCD,MAAAA,OAAO,GAAGf,aAAa,CAACA,aAAd,CAA4Be,OAA5B,CAAV;AACAA,MAAAA,OAAO,CAACE,SAAR,GAAoB,CAACF,OAAO,CAACE,SAAR,IAAqB,EAAtB,EAA0BC,GAA1B,CAA8B;AAAA,YAAC;AAACC,UAAAA,EAAD;AAAKC,UAAAA;AAAL,SAAD;AAAA,eAAkB;AAClEC,UAAAA,EAAE,EAAEF,EAD8D;AAElEG,UAAAA,KAAK,EAAE,CAACF,KAAK,IAAI,EAAV,EAAcF,GAAd,CAAkBK,CAAC,IAAI,IAAIzB,SAAS,CAAC0B,SAAd,CAAwBD,CAAxB,CAAvB;AAF2D,SAAlB;AAAA,OAA9B,CAApB;AAIA,YAAMR,OAAN;AACD;AACF;;AACD,SAAOV,KAAP;AACD,CApBmB,CAApB;AAsBAT,OAAO,CAACO,WAAR,GAAsBA,WAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar multiaddr = require('multiaddr');\nvar objectToCamel = require('../lib/object-to-camel.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createQuery = configure.configure(api => {\n  async function* query(peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (let message of res.ndjson()) {\n      message = objectToCamel.objectToCamel(message);\n      message.responses = (message.responses || []).map(({ID, Addrs}) => ({\n        id: ID,\n        addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n      }));\n      yield message;\n    }\n  }\n  return query;\n});\n\nexports.createQuery = createQuery;\n"]},"metadata":{},"sourceType":"script"}