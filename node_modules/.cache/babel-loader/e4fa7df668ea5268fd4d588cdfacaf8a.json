{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createGetAll = configure.configure(api => {\n  const getAll = async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('config/show', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({ ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data;\n  };\n\n  return getAll;\n});\nexports.createGetAll = createGetAll;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/config/get-all.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createGetAll","api","getAll","options","res","post","signal","searchParams","headers","data","json"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AAEA,MAAME,YAAY,GAAGH,SAAS,CAACA,SAAV,CAAoBI,GAAG,IAAI;AAC9C,QAAMC,MAAM,GAAG,kBAAwB;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;AACrC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADwB;AAExCC,MAAAA,YAAY,EAAER,iBAAiB,CAACA,iBAAlB,CAAoC,EAAE,GAAGI;AAAL,OAApC,CAF0B;AAGxCK,MAAAA,OAAO,EAAEL,OAAO,CAACK;AAHuB,KAAxB,CAAlB;AAKA,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GARD;;AASA,SAAOP,MAAP;AACD,CAXoB,CAArB;AAaAP,OAAO,CAACK,YAAR,GAAuBA,YAAvB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createGetAll = configure.configure(api => {\n  const getAll = async (options = {}) => {\n    const res = await api.post('config/show', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({ ...options }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data;\n  };\n  return getAll;\n});\n\nexports.createGetAll = createGetAll;\n"]},"metadata":{},"sourceType":"script"}