{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar objectToCamel = require('./lib/object-to-camel.js');\n\nvar multiaddr = require('multiaddr');\n\nvar configure = require('./lib/configure.js');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\n\nconst createId = configure.configure(api => {\n  async function id() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    const output = { ...objectToCamel.objectToCamel(data)\n    };\n\n    if (output.addresses) {\n      output.addresses = output.addresses.map(ma => new multiaddr.Multiaddr(ma));\n    }\n\n    return output;\n  }\n\n  return id;\n});\nexports.createId = createId;","map":{"version":3,"sources":["/Users/intvirtue/Last-final/node_modules/ipfs-http-client/cjs/src/id.js"],"names":["Object","defineProperty","exports","value","objectToCamel","require","multiaddr","configure","toUrlSearchParams","createId","api","id","options","res","post","signal","searchParams","arg","peerId","toString","undefined","headers","data","json","output","addresses","map","ma","Multiaddr"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,0BAAD,CAA3B;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,+BAAD,CAA/B;;AAEA,MAAMI,QAAQ,GAAGF,SAAS,CAACA,SAAV,CAAoBG,GAAG,IAAI;AAC1C,iBAAeC,EAAf,GAAgC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC9B,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,IAAT,EAAe;AAC/BC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADe;AAE/BC,MAAAA,YAAY,EAAER,iBAAiB,CAACA,iBAAlB,CAAoC;AAChDS,QAAAA,GAAG,EAAEL,OAAO,CAACM,MAAR,GAAiBN,OAAO,CAACM,MAAR,CAAeC,QAAf,EAAjB,GAA6CC,SADF;AAEhD,WAAGR;AAF6C,OAApC,CAFiB;AAM/BS,MAAAA,OAAO,EAAET,OAAO,CAACS;AANc,KAAf,CAAlB;AAQA,UAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAJ,EAAnB;AACA,UAAMC,MAAM,GAAG,EAAE,GAAGpB,aAAa,CAACA,aAAd,CAA4BkB,IAA5B;AAAL,KAAf;;AACA,QAAIE,MAAM,CAACC,SAAX,EAAsB;AACpBD,MAAAA,MAAM,CAACC,SAAP,GAAmBD,MAAM,CAACC,SAAP,CAAiBC,GAAjB,CAAqBC,EAAE,IAAI,IAAIrB,SAAS,CAACsB,SAAd,CAAwBD,EAAxB,CAA3B,CAAnB;AACD;;AACD,WAAOH,MAAP;AACD;;AACD,SAAOb,EAAP;AACD,CAlBgB,CAAjB;AAoBAT,OAAO,CAACO,QAAR,GAAmBA,QAAnB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar objectToCamel = require('./lib/object-to-camel.js');\nvar multiaddr = require('multiaddr');\nvar configure = require('./lib/configure.js');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\n\nconst createId = configure.configure(api => {\n  async function id(options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    const output = { ...objectToCamel.objectToCamel(data) };\n    if (output.addresses) {\n      output.addresses = output.addresses.map(ma => new multiaddr.Multiaddr(ma));\n    }\n    return output;\n  }\n  return id;\n});\n\nexports.createId = createId;\n"]},"metadata":{},"sourceType":"script"}